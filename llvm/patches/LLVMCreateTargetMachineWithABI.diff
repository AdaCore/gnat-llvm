diff --git a/llvm/include/llvm-c/TargetMachine.h b/llvm/include/llvm-c/TargetMachine.h
index bfbe1421a356..e7481a7b4373 100644
--- a/llvm/include/llvm-c/TargetMachine.h
+++ b/llvm/include/llvm-c/TargetMachine.h
@@ -103,6 +103,13 @@ LLVMTargetMachineRef LLVMCreateTargetMachine(LLVMTargetRef T,
   const char *Triple, const char *CPU, const char *Features,
   LLVMCodeGenOptLevel Level, LLVMRelocMode Reloc, LLVMCodeModel CodeModel);
 
+/** Creates a new llvm::TargetMachine. See llvm::Target::createTargetMachine */
+LLVMTargetMachineRef
+LLVMCreateTargetMachineWithABI(LLVMTargetRef T, const char *Triple,
+                               const char *CPU, const char *Features,
+                               const char *ABI, LLVMCodeGenOptLevel Level,
+                               LLVMRelocMode Reloc, LLVMCodeModel CodeModel);
+
 /** Dispose the LLVMTargetMachineRef instance generated by
   LLVMCreateTargetMachine. */
 void LLVMDisposeTargetMachine(LLVMTargetMachineRef T);
diff --git a/llvm/lib/Target/TargetMachineC.cpp b/llvm/lib/Target/TargetMachineC.cpp
index aa9c9d176db5..20c8debce03b 100644
--- a/llvm/lib/Target/TargetMachineC.cpp
+++ b/llvm/lib/Target/TargetMachineC.cpp
@@ -96,10 +96,19 @@ LLVMBool LLVMTargetHasAsmBackend(LLVMTargetRef T) {
   return unwrap(T)->hasMCAsmBackend();
 }
 
-LLVMTargetMachineRef LLVMCreateTargetMachine(LLVMTargetRef T,
-        const char *Triple, const char *CPU, const char *Features,
-        LLVMCodeGenOptLevel Level, LLVMRelocMode Reloc,
-        LLVMCodeModel CodeModel) {
+LLVMTargetMachineRef
+LLVMCreateTargetMachine(LLVMTargetRef T, const char *Triple, const char *CPU,
+                        const char *Features, LLVMCodeGenOptLevel Level,
+                        LLVMRelocMode Reloc, LLVMCodeModel CodeModel) {
+  return LLVMCreateTargetMachineWithABI(T, Triple, CPU, Features, "", Level,
+                                        Reloc, CodeModel);
+}
+
+LLVMTargetMachineRef
+LLVMCreateTargetMachineWithABI(LLVMTargetRef T, const char *Triple,
+                               const char *CPU, const char *Features,
+                               const char *ABI, LLVMCodeGenOptLevel Level,
+                               LLVMRelocMode Reloc, LLVMCodeModel CodeModel) {
   std::optional<Reloc::Model> RM;
   switch (Reloc){
     case LLVMRelocStatic:
@@ -144,6 +153,7 @@ LLVMTargetMachineRef LLVMCreateTargetMachine(LLVMTargetRef T,
   }
 
   TargetOptions opt;
+  opt.MCOptions.ABIName = ABI;
   return wrap(unwrap(T)->createTargetMachine(Triple, CPU, Features, opt, RM, CM,
                                              OL, JIT));
 }
